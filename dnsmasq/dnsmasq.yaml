apiVersion: v1
kind: ConfigMap
metadata:
  name: dnsmasq
data:
  dnsmasq.conf: |
    # Set the interface on which dnsmasq operates.
    # If not set, all the interfaces is used.
    interface=eno1

    # To disable dnsmasq's DNS server functionality.
    #port=0

    # listen to every interface
    except-interface=none

    # IPV6
    # dhcp-range=::100,::1fff,constructor:eno1,ra-stateless,ra-names,slaac
    # enable-ra

    # To enable dnsmasq's DHCP server functionality.
    dhcp-range=192.168.2.10,192.168.2.199,255.255.255.0,7d
    dhcp-host=48:B0:2D:4F:77:69,192.168.2.186,shield,7d
    dhcp-host=DC:68:EB:10:78:77,192.168.2.86,switch,7d

    dhcp-host=B4:75:0E:72:00:F5,192.168.2.20,wemo1,7d
    dhcp-host=94:10:3E:69:D1:2D,192.168.2.21,wemo2,7d
    dhcp-host=B4:75:0E:72:02:C5,192.168.2.22,wemo3,7d

    # Set gateway as Router. Following two lines are identical.
    dhcp-option=3,192.168.2.1

    # Set DNS server as PiHole
    dhcp-option=6,192.168.2.201,192.168.2.202

    # dhcp v4 rapid commit
    dhcp-rapid-commit

    domain-needed
    bogus-priv
    expand-hosts
    no-resolv

    # domain setup
    domain=nowhere
    local=/nowhere/

    dhcp-authoritative

    # Logging.
    log-async
    log-queries # log queries.
    log-dhcp    # log dhcp related messages.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dnsmasq
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: dnsmasq
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: dnsmasq
        part-of: dnsmasq
    spec:
      hostNetwork: true
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "part-of"
                    operator: In
                    values:
                      - dnsmasq
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: dnsmasq
          image: nucio.nowhere:30038/dnsmasq:latest
          imagePullPolicy: Always
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          ports:
            - containerPort: 53
              name: dns-udp
              protocol: UDP
            - containerPort: 67
              name: client-udp
              protocol: UDP
          volumeMounts:
            - name: confmap-vol
              subPath: "dnsmasq.conf"
              mountPath: "/etc/dnsmasq.conf"
            - name: dnsmasq-pvc
              subPath: "dnsmasq.leases"
              mountPath: "/var/lib/misc/dnsmasq.leases"
      volumes:
        - name: dnsmasq-pvc
          persistentVolumeClaim:
            claimName: dnsmasq-pvc
        - configMap:
            name: dnsmasq
          name: confmap-vol
      dnsPolicy: "ClusterFirstWithHostNet"
      dnsConfig:
        nameservers:
          - 10.43.0.22
---
apiVersion: v1
kind: Service
metadata:
  name: dnsmasq-internal
spec:
  clusterIP: 10.43.0.23
  ports:
    - port: 53
      targetPort: 53
      protocol: UDP
      name: port53
    - port: 67
      targetPort: 67
      protocol: UDP
      name: port67
  selector:
    app: dnsmasq
  type: ClusterIP
