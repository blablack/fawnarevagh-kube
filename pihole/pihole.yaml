---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "pihole"
  labels:
    type: "local"
spec:
  storageClassName: "manual"
  capacity:
    storage: "500Mi"
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/opt/k3dvol/pihole"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "pihole-dnsmasq"
  labels:
    type: "local"
spec:
  storageClassName: "manual"
  capacity:
    storage: "500Mi"
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/opt/k3dvol/pihole-dnsmasq"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "pihole"
spec:
  storageClassName: "manual"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "500Mi"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "pihole-dnsmasq"
spec:
  storageClassName: "manual"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "500Mi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  labels:
    app: pihole
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
        name: pihole
    spec:
      containers:
        - name: pihole
          image: pihole/pihole:latest
          imagePullPolicy: Always
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          ports:
            - containerPort: 80
              name: pihole-http
              protocol: TCP
            - containerPort: 53
              name: dns
              protocol: TCP
            - containerPort: 53
              name: dns-udp
              protocol: UDP
            - containerPort: 443
              name: pihole-ssl
              protocol: TCP
            - containerPort: 67
              name: client-udp
              protocol: UDP
          env:
            - name: ServerIP
              value: 192.168.2.4
            - name: TZ
              value: "EU/Dublin"
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: pihole-webpassword
            - name: DNSMASQ_LISTENING
              value: "all"
          volumeMounts:
            - name: pihole-local-etc-volume
              mountPath: "/etc/pihole"
            - name: pihole-dnsmasq-volume
              mountPath: "/etc/dnsmasq.d"
      volumes:
        - name: pihole-local-etc-volume
          persistentVolumeClaim:
            claimName: pihole
        - name: pihole-dnsmasq-volume
          persistentVolumeClaim:
            claimName: pihole-dnsmasq
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 192.168.2.201
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-tcp
  annotations:
    metallb.universe.tf/address-pool: default
    metallb.universe.tf/allow-shared-ip: pihole-svc
spec:
  externalTrafficPolicy: Local
  loadBalancerIP: 192.168.2.201
  ports:
    # pihole use Ports to expose (53, 80, 67, 443), the bare minimum ports required for Pi-holes HTTP and DNS services
    - port: 80
      targetPort: 80
      name: port80
      protocol: TCP
    - port: 443
      targetPort: 443
      name: port443
      protocol: TCP
    - port: 53
      targetPort: 53
      protocol: TCP
      name: port53
  selector:
    app: pihole
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-udp
  annotations:
    metallb.universe.tf/address-pool: default
    metallb.universe.tf/allow-shared-ip: pihole-svc
spec:
  externalTrafficPolicy: Local
  loadBalancerIP: 192.168.2.201
  ports:
    - port: 53
      targetPort: 53
      protocol: UDP
      name: port53-udp
    - port: 67
      targetPort: 67
      protocol: UDP
      name: port67-udp
  selector:
    app: pihole
  type: LoadBalancer
