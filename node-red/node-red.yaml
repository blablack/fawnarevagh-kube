apiVersion: v1
kind: PersistentVolume
metadata:
  name: node-red-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/opt/k3dvol/node-red"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: node-red-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-red
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: node-red
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: node-red
    spec:
      volumes:
        - name: node-red-storage
          persistentVolumeClaim:
            claimName: node-red-pv-claim
      containers:
        - image: nodered/node-red
          imagePullPolicy: Always
          name: node-red
          volumeMounts:
            - mountPath: "/data"
              name: node-red-storage
          resources: {}
          env:
            - name: NODE_RED_ENABLE_PROJECTS
              value: "true"
            - name: TZ
              value: "Europe/Dublin"
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 192.168.2.201
---
apiVersion: v1
kind: Service
metadata:
  name: node-red
  annotations:
    metallb.universe.tf/address-pool: default
    metallb.universe.tf/allow-shared-ip: node-red-svc
spec:
  externalTrafficPolicy: Local
  loadBalancerIP: 192.168.2.205
  selector:
    app: node-red
  ports:
    - port: 80
      targetPort: 1880
  type: LoadBalancer
