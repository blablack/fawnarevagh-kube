apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: immich
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: immich
    spec:
      volumes:
        - name: immich-pvc
          persistentVolumeClaim:
            claimName: immich-pvc
        - name: nasio-nfs-pvc
          persistentVolumeClaim:
            claimName: nasio-nfs-pvc
        - configMap:
            name: immich-postgres
          name: immich-postgres-vol
      containers:
        - image: ghcr.io/immich-app/postgres:16-vectorchord0.3.0-pgvectors0.3.0
          imagePullPolicy: Always
          name: postgres
          env:
            - name: POSTGRES_USER
              value: "immich"
            - name: POSTGRES_PASSWORD
              value: "immich"
            - name: POSTGRES_DB
              value: "immich"
            - name: POSTGRES_INITDB_ARGS
              value: "--data-checksums"
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              subPath: "postgresql"
              name: immich-pvc
          startupProbe:
            exec:
              command:
                - pg_isready
                - -U
                - immich
                - -d
                - immich
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - immich
                - -d
                - immich
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - immich
                - -d
                - immich
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            limits:
              cpu: 1500m
              memory: 3000Mi
            requests:
              cpu: 10m
              memory: 300Mi
        - image: redis:latest
          imagePullPolicy: Always
          name: redis
          resources:
            limits:
              cpu: 100m
              memory: 400Mi
            requests:
              cpu: 40m
              memory: 50Mi
        - image: ghcr.io/immich-app/immich-server:release
          imagePullPolicy: Always
          name: immich-server
          env:
            - name: DB_HOSTNAME
              value: "localhost"
            - name: DB_USERNAME
              value: "immich"
            - name: DB_PASSWORD
              value: "immich"
            - name: DB_DATABASE_NAME
              value: "immich"
            - name: REDIS_HOSTNAME
              value: "localhost"
            - name: IMMICH_PORT
              value: "3001"
            - name: IMMICH_MACHINE_LEARNING_URL
              value: "http://localhost:3003"
          ports:
            - containerPort: 3001
              name: http
          startupProbe:
            httpGet:
              path: /server-info/ping
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /server-info/ping
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /server-info/ping
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5
          volumeMounts:
            - mountPath: "/photos"
              subPath: "Our Pictures"
              name: nasio-nfs-pvc
            - mountPath: "/usr/src/app/upload"
              subPath: "Kubernetes/Our Pictures - Immich"
              name: nasio-nfs-pvc
          resources:
            limits:
              cpu: 1500m
              memory: 2500Mi
            requests:
              cpu: 10m
              memory: 100Mi
        - image: ghcr.io/immich-app/immich-machine-learning:release
          imagePullPolicy: Always
          name: immich-machine-learning
          env:
            - name: TRANSFORMERS_CACHE
              value: "/cache"
            - name: IMMICH_PORT
              value: "3003"
          ports:
            - containerPort: 3003
              name: http
          startupProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5
          volumeMounts:
            - mountPath: "/cache"
              subPath: "ml-cache"
              name: immich-pvc
          resources:
            limits:
              cpu: 1500m
              memory: 4000Mi
            requests:
              cpu: 10m
              memory: 1000Mi
---
apiVersion: v1
kind: Service
metadata:
  name: immich
  namespace: default
  annotations:
    metallb.io/address-pool: default
    metallb.io/loadBalancerIPs: 192.168.2.210
spec:
  externalTrafficPolicy: Local
  selector:
    app: immich
  ports:
    - name: http-80
      protocol: TCP
      port: 80
      targetPort: 3001
  type: LoadBalancer
