apiVersion: batch/v1
kind: CronJob
metadata:
  name: download-root-hints
spec:
  schedule: "0 0 16 * *"
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        metadata:
          labels:
            app: download-root-hints
            part-of: pihole
        spec:
          volumes:
            - name: pihole-pvc
              persistentVolumeClaim:
                claimName: pihole-pvc
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: "part-of"
                        operator: In
                        values:
                          - pihole
                  topologyKey: "kubernetes.io/hostname"
          containers:
            - image: nucio.nowhere:30038/download-root-hints:latest
              imagePullPolicy: Always
              name: download-root-hints
              volumeMounts:
                - mountPath: "/tmp/unbound_config"
                  subPath: "unbound"
                  name: pihole-pvc
              resources:
                limits:
                  cpu: 200m
                  memory: 200Mi
                requests:
                  cpu: 100m
                  memory: 100Mi
          restartPolicy: Never
          dnsPolicy: "None"
          dnsConfig:
            nameservers:
              - 10.43.0.22
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: pihole
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: pihole
        part-of: pihole
    spec:
      hostNetwork: false
      hostname: pihole
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "part-of"
                    operator: In
                    values:
                      - pihole
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: pihole
          image: pihole/pihole:latest
          imagePullPolicy: Always
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          ports:
            - containerPort: 80
              name: pihole-http
              protocol: TCP
            - containerPort: 53
              name: dns
              protocol: TCP
            - containerPort: 53
              name: dns-udp
              protocol: UDP
            - containerPort: 443
              name: pihole-ssl
              protocol: TCP
            - containerPort: 67
              name: client-udp
              protocol: UDP
          env:
            - name: TZ
              value: "EU/Dublin"
            - name: FTLCONF_webserver_api_password
              valueFrom:
                secretKeyRef:
                  key: password
                  name: pihole-webpassword
            - name: FTLCONF_dns_listeningMode
              value: "all"
          startupProbe:
            httpGet:
              path: /admin/login
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /admin/login
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /admin/login
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 5
          volumeMounts:
            - name: pihole-pvc
              subPath: "pihole"
              mountPath: "/etc/pihole"
            - name: pihole-pvc
              subPath: "pihole-dnsmasq"
              mountPath: "/etc/dnsmasq.d"
          resources:
            limits:
              cpu: 200m
              memory: 400Mi
            requests:
              cpu: 10m
              memory: 100Mi
        - image: mvance/unbound:latest
          imagePullPolicy: Always
          name: unbound
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: "/opt/unbound/etc/unbound/"
              subPath: "unbound"
              name: pihole-pvc
          resources:
            limits:
              cpu: 40m
              memory: 150Mi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: pihole-pvc
          persistentVolumeClaim:
            claimName: pihole-pvc
      dnsPolicy: "ClusterFirst"
      dnsConfig:
        nameservers:
          - 10.43.0.22
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-external1
  annotations:
    metallb.io/address-pool: default
    metallb.io/loadBalancerIPs: 192.168.2.201
spec:
  externalTrafficPolicy: Local
  ports:
    # pihole use Ports to expose (53, 80, 67, 443), the bare minimum ports required for Pi-holes HTTP and DNS services
    - port: 80
      targetPort: 80
      name: port80
      protocol: TCP
    - port: 443
      targetPort: 443
      name: port443
      protocol: TCP
    - port: 53
      targetPort: 53
      protocol: TCP
      name: port53
    - port: 53
      targetPort: 53
      protocol: UDP
      name: port53-udp
    - port: 67
      targetPort: 67
      protocol: UDP
      name: port67-udp
  selector:
    app: pihole
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-external2
  annotations:
    metallb.io/address-pool: default
    metallb.io/loadBalancerIPs: 192.168.2.202
spec:
  externalTrafficPolicy: Local
  ports:
    # pihole use Ports to expose (53, 80, 67, 443), the bare minimum ports required for Pi-holes HTTP and DNS services
    - port: 80
      targetPort: 80
      name: port80
      protocol: TCP
    - port: 443
      targetPort: 443
      name: port443
      protocol: TCP
    - port: 53
      targetPort: 53
      protocol: TCP
      name: port53
    - port: 53
      targetPort: 53
      protocol: UDP
      name: port53-udp
    - port: 67
      targetPort: 67
      protocol: UDP
      name: port67-udp
  selector:
    app: pihole
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-internal
spec:
  clusterIP: 10.43.0.22
  ports:
    # pihole use Ports to expose (53, 80, 67, 443), the bare minimum ports required for Pi-holes HTTP and DNS services
    - port: 80
      targetPort: 80
      name: port80
      protocol: TCP
    - port: 443
      targetPort: 443
      name: port443
      protocol: TCP
    - port: 53
      targetPort: 53
      protocol: TCP
      name: port53
    - port: 53
      targetPort: 53
      protocol: UDP
      name: port53-udp
    - port: 67
      targetPort: 67
      protocol: UDP
      name: port67-udp
  selector:
    app: pihole
  type: ClusterIP
