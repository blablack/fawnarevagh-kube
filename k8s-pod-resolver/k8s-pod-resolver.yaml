---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-pod-resolver
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-ip-reader
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-pod-resolver-binding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: k8s-pod-resolver
    namespace: default
roleRef:
  kind: ClusterRole
  name: pod-ip-reader
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-pod-resolver
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k8s-pod-resolver
  template:
    metadata:
      labels:
        app: k8s-pod-resolver
    spec:
      serviceAccountName: k8s-pod-resolver
      containers:
        - name: k8s-pod-resolver
          image: nucio.nowhere:30038/k8s-pod-resolver:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 53
              protocol: UDP
              name: dns
            - containerPort: 8080
              protocol: TCP
              name: http
          env:
            - name: DNS_PORT
              value: "53"
          startupProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 50m
              memory: 100Mi

---
apiVersion: v1
kind: Service
metadata:
  name: k8s-pod-resolver
  namespace: default
spec:
  selector:
    app: k8s-pod-resolver
  ports:
    - port: 53
      protocol: UDP
      targetPort: 53
      name: dns
    - port: 8080
      protocol: TCP
      targetPort: 8080
      name: http
  type: ClusterIP
  clusterIP: 10.43.0.26
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-pod-resolver-nodeport
  namespace: default
spec:
  type: NodePort
  selector:
    app: k8s-pod-resolver
  ports:
  - port: 53
    targetPort: 53
    nodePort: 31053
    protocol: UDP
    name: dns
