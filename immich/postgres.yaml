apiVersion: v1
kind: ConfigMap
metadata:
  name: immich-postgres
data:
  create-extensions.sql: |
    CREATE EXTENSION IF NOT EXISTS cube;
    CREATE EXTENSION IF NOT EXISTS earthdistance;
    CREATE EXTENSION IF NOT EXISTS vectors;
    CREATE EXTENSION IF NOT EXISTS pg_trgm;
    CREATE EXTENSION IF NOT EXISTS unaccent;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: immich
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: immich
    spec:
      volumes:
        - name: immich-pvc
          persistentVolumeClaim:
            claimName: immich-pvc
        - name: nasio-nfs-pvc
          persistentVolumeClaim:
            claimName: nasio-nfs-pvc
        - configMap:
            name: immich-postgres
          name: immich-postgres-vol
      containers:
        - image: tensorchord/pgvecto-rs:pg16-v0.2.1
          imagePullPolicy: IfNotPresent
          name: postgres
          command: ["/bin/sleep", "3650d"]
          env:
            - name: POSTGRES_USER
              value: "immich"
            - name: POSTGRES_PASSWORD
              value: "immich"
            - name: POSTGRES_DB
              value: "immich"
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              subPath: "postgresql"
              name: immich-pvc
            - name: immich-postgres-vol
              subPath: "create-extensions.sql"
              mountPath: "/docker-entrypoint-initdb.d/create-extensions.sql"
          resources:
            limits:
              cpu: 500m
              memory: 300Mi
            requests:
              cpu: 10m
              memory: 50Mi
